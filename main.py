import telebot
import requests
import webbrowser


bot = telebot.TeleBot("7581133164:AAEiGl1U5uaGAA_mXvbHwpbGmBBMQ-GbHFk")
API = "90e44b52ef895c6ccddd01d5c924de27"
URL = "http://ws.audioscrobbler.com/2.0/"



@bot.message_handler(commands=["start", "meow", "hello"])
def start(message):
    bot.send_message(
        message.chat.id,
        (
            "–ü—Ä–∏–≤–µ—Ç–∏–∫! –Ø –±–æ—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª—é–±–æ–π (–Ω–µ—Ç) –ø–µ—Å–Ω–µ!\n"
            "–í–æ–æ–±—â–µ–º –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –≤–æ—Ç —Ç–∞–∫:\n"
            '"–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ + –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"'
        ),
        parse_mode="Markdown",
    )


def get_track(song, artist):
    params = {
        "method": "track.getInfo",
        "api_key": API,
        "artist": artist,
        "track": song,
        "format": "json",
    }

    response = requests.get(URL, params=params)
    info = response.json()

    if "track" in info:
        track = info["track"]
        track_name = track.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        artist_name = track.get("artist", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        album_name = track.get("album", {}).get("title", "–ù–µ —É–∫–∞–∑–∞–Ω")
        playcount = track.get("playcount", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        listeners = track.get("listeners", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        track_url = track.get("url", "–ù–µ—Ç —Å—Å—ã–ª–∫–∏")

        return (
            f"üéµ *–ù–∞–∑–≤–∞–Ω–∏–µ:* {track_name}\n"
            f"üé§ *–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:* {artist_name}\n"
            f"üíø *–ê–ª—å–±–æ–º:* {album_name}\n"
            f"üë• *–ö–æ—Ç—è—Ç (—Å–ª—É—à–∞—Ç–µ–ª–µ–π):* {listeners}\n"
            f"‚ñ∂Ô∏è *–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è:* {playcount}\n"
            f"üåê [–°—Å—ã–ª–∫–∞ –Ω–∞ Last.fm]({track_url})"
        )
    else:
        return "–ü—Ä–æ—Å—Ç–∏! –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ú–æ–∂–µ—Ç —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª? ‚îê(Ôø£‚àÄÔø£)‚îå"


@bot.message_handler(commands=["ur_favourite_song"])
def cat_fav_song(message):
    bot.reply_to(
        message,
        (
            "–û–π, —è —Ç–∞–∫ —Ä–∞–¥, —á—Ç–æ —Ç—ã —Å–ø—Ä–æ—Å–∏–ª –ø—Ä–æ –º–æ—é –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—é! –í–æ—Ç –æ–Ω–∞:"
            "[ur_favourite_song](https://www.last.fm/music/lvusm/_/meow)"
        ),
        parse_mode="Markdown",
    )


@bot.message_handler(commands=["site", "last.fm"])
def site(message):
    bot.send_message(message.chat.id, ("–°–µ–∫—É–Ω–¥–æ—á–∫—É –∏ —Ç—ã —É–∂–µ –Ω–∞ —Å–∞–π—Ç–∏–∫–µ! –•–∏—Ö–∏-—Ö–∞—Ö–∞ üòà"))
    webbrowser.open("https://www.last.fm/home")


def get_top_tracks(artist_name):
    params = {
        'method': 'artist.getTopTracks',
        'artist': artist_name,
        'api_key': API,
        'format': 'json'
    }
    response = requests.get(URL, params=params)
    data = response.json()
    
    if 'toptracks' in data:
        tracks = data['toptracks']['track']
        return [{
            'name': track['name'],
            'listeners': track.get('listeners', '0'),
            'url': track['url']
        } for track in tracks[:10]]  #—Ç–æ–ø 10 –≤–æ–∑—å–º—É, –º–± –ø–æ–º–µ–Ω—è—é
    else:
        return None

@bot.message_handler(commands=['toptracks'])
def send_top_tracks(message):
    artist_name = message.text.replace('/toptracks', '').strip()
    if artist_name:
        top_tracks = get_top_tracks(artist_name)
        if top_tracks:
            response = f"üé§ *–¢–æ–ø-10 —Ç—Ä–µ–∫–æ–≤ –¥–ª—è {artist_name}:*\n"
            for idx, track in enumerate(top_tracks, 1):
                response += f"{idx}. üéµ [{track['name']}]({track['url']}) (–°–ª—É—à–∞—Ç–µ–ª–∏: {track['listeners']})\n"
            bot.reply_to(message, response, parse_mode='Markdown')
        else:
            bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ–ø–æ–≤—ã–µ —Ç—Ä–µ–∫–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–í–≤–µ–¥–∏ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã! /toptracks.")


@bot.message_handler(func=lambda message: True)
def handle(message):
    user_message = message.text
    if "+" in user_message:
        song2, artist2 = map(str.strip, user_message.split("+", 1))
        result = get_track(song2, artist2)
        bot.reply_to(message, result, parse_mode="Markdown")
    else:
        bot.reply_to(
            message,
            (
                "–¢—ã –Ω–µ —Ç–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å! –û–±—è–∑–∞—Ç–µ–ª–µ–Ω —Ñ–æ—Ä–º–∞—Ç:\n"
                '"–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ + –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å",\n —è –ø–æ-–¥—Ä—É–≥–æ–º—É –Ω–µ —É–º–µ—é...	(„Å£ÀòÃ©‚ï≠‚ïÆÀòÃ©)„Å£'
            ),
        )



bot.infinity_polling()
